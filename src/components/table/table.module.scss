@use '../card/card.module.scss';

@value tableWidth: min(100vw, 100vh);
@value tableHeight: calc(tableWidth * 1.4);

@value pageWidth: 30vh;
@value pageHeight: calc(pageWidth * 1.4);

@value bookWidth: pageWidth;
@value bookHeight: pageHeight;
@value bookTop: 5%;

@value handSlotTop: 5%;
@value handSlotWidth: 45vh;
@value handSlotHeight: cardHeight;

@value tableColor: #763F13;
@value tableColorDark: #221100;

.room {
  position: absolute;
  perspective: calc(tableWidth);
  perspective-origin: 50% 50%;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.container {
  position: absolute;
  left: calc((100vw - tableWidth)/2);
  bottom: 0;
  width: tableWidth;
  height: tableHeight;
}

.table {
  background: tableColor;
  position: absolute;
  width: 100%;
  height: 100%;
  transform-origin: calc(tableWidth/2) tableHeight;
  transition: transform 1s ease-in-out;
  pointer-events: all;
}

.table.topDown {
  background: tableColorDark;
  transform:
      rotateX(20deg)
      translate(0, calc(bookHeight))
      translateZ(calc(-1 * tableWidth));
}

.table.topDownBookCentered {
  // TODO gradients aren't transitionable, but an overlay with opacity is...
  background: linear-gradient(tableColorDark, tableColor);
  transform:
      rotateX(20deg)
      translate(calc(-1 * (bookWidth / 2)), calc(tableHeight - bookHeight - bookTop - handSlotTop))
      translateZ(calc(tableHeight/4))
      ;
}

.table.tilted {
  // TODO gradients aren't transitionable, but an overlay with opacity is...
  background: linear-gradient(tableColorDark, tableColor);
  transform:
      translateZ(calc(tableHeight * .8))
      translate(0, 0)
      rotateX(60deg)
      ;
}

.book-slot {
  position: absolute;
  top: bookTop;
  left: 50%;
  width: bookWidth;
  height: bookHeight;
  background-color: brown;
}

.hand-slot {
  position: absolute;
  display: flex;
  top: calc(bookTop + bookHeight + handSlotTop);
  left: calc((100% - handSlotWidth) / 2);
  width: handSlotWidth;
  height: handSlotHeight;
  background-color: brown;  
}

.deck-slot {
  position: absolute;
  top: calc(bookTop + bookHeight + handSlotTop);
  left: calc((100% + handSlotWidth) / 2 + 2%);
  width: cardWidth;
  height: cardHeight;
  background-color: blue;
}
